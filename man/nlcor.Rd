% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/correlations.R
\name{nlcor}
\alias{nlcor}
\title{Compute Nonlinear Correlation}
\usage{
nlcor(x, y, refine = 0.975, plt = F)
}
\arguments{
\item{x}{A numeric vector. NAs are not allowed. The length of the vector should be more than 10.}

\item{y}{A numeric vector. NAs are not allowed. Length should be same as x.}

\item{refine}{Optional. Default value 0.5. Increase the value to increase
the granularity of local correlation computation.}

\item{plt}{Optional. Default value FALSE. Set TRUE to return ggplot2 object
for the data correlation visualization.}
}
\value{
The output is a list containing the nonlinear correlation \code{cor.estimate}, \code{adjusted.p.value}, and \code{cor.plot}. \code{cor.estimate}
is between 0 and 1 (a negative nonlinear correlation is undefined). The
\code{adjusted.p.value} shows the statistical significance of the
\code{cor.estimate}. If \code{adjusted.p.value > 0.05}, the nonlinear
correlation estimate can be considered as noise (statistically not
significant). If \code{plt = T}, \code{ggplot2} object is return for
plotting the identified local linear correlations in the data.
}
\description{
Compute nonlinear correlation using spatial sampling. Local linear
correlations are computed at the samples and combined.
}
\examples{
library(nlcor)
library(ggplot2)
plot(x1, y1)
c <- nlcor(x1, y1)
c
c <- nlcor(x2, y2, plt = TRUE)
print(c$cor.plot)
c <- nlcor(x3, y3, refine = 0.9, plt = TRUE)
c$cor.estimate
c$adjusted.p.value
print(c$cor.plot)

}
\seealso{
\code{\link{cor}}
}
\keyword{correlation}
\keyword{nonlinear}
